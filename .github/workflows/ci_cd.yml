name: CI/CD Back-end

on:
  push:
    branches:  
      - master 
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn -B package -DskipTests
        working-directory: ./api/fornari.nucleo

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run tests with Maven
        run: mvn -B test
        working-directory: ./api/fornari.nucleo
        
  docker:
    runs-on: ubuntu-latest
    needs:
      - build
      - test
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: ./api/fornari.nucleo
          file: ./Dockerfile
          push: true
          tags: carlozeduardo/backend:latest

  deploy-1:
    runs-on: [self-hosted]
    needs: [build, test, docker]
    steps:
      - name: Pull Docker image
        run: docker pull carlozeduardo/backend:latest
  
      - name: Stop Docker container
        run: docker stop backend || true
  
      - name: Remove Docker container
        run: docker rm backend || true
      
      - name: Create .env file
        run: |
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "EMAIL_SPRING=${{ secrets.EMAIL_SPRING }}" >> .env
          echo "SENHA_EMAIL_SPRING=${{ secrets.SENHA_EMAIL_SPRING }}" >> .env
          echo "SENHA_PADRAO=${{ secrets.SENHA_PADRAO }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" >> .env
          echo "SQL_USER=${{ secrets.SQL_USER }}" >> .env
  
      - name: Run Docker container
        run: docker run --name backend -d -p 8080:8080 --env-file .env --restart unless-stopped carlozeduardo/backend:latest
  
  deploy-2:
    runs-on: [self-hosted]
    needs: [build, test, docker]
    steps:
     - name: Pull Docker image
       run: docker pull carlozeduardo/backend:latest
  
     - name: Stop Docker container
       run: docker stop backend || true
  
     - name: Remove Docker container
       run: docker rm backend || true
      
     - name: Create .env file
       run: |
          echo "MYSQL_HOST=${{ secrets.MYSQL_HOST }}" >> .env
          echo "EMAIL_SPRING=${{ secrets.EMAIL_SPRING }}" >> .env
          echo "SENHA_EMAIL_SPRING=${{ secrets.SENHA_EMAIL_SPRING }}" >> .env
          echo "SENHA_PADRAO=${{ secrets.SENHA_PADRAO }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SQL_PASSWORD=${{ secrets.SQL_PASSWORD }}" >> .env
          echo "SQL_USER=${{ secrets.SQL_USER }}" >> .env
  
     - name: Run Docker container
       run: docker run --name backend -d -p 8080:8080 --env-file .env --restart unless-stopped carlozeduardo/backend:latest
